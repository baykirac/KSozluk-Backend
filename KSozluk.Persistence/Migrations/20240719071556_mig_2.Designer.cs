// <auto-generated />
using System;
using KSozluk.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KSozluk.Persistence.Migrations
{
    [DbContext(typeof(SozlukContext))]
    [Migration("20240719071556_mig_2")]
    partial class mig_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KSozluk.Domain.Descriptions", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("character varying(550)")
                        .HasColumnName("description");

                    b.Property<double>("Order")
                        .HasColumnType("double precision")
                        .HasColumnName("order");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<Guid?>("WordId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("descriptions", (string)null);
                });

            modelBuilder.Entity("KSozluk.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email")
                        .HasAnnotation("RegularExpression", "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fullname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("password")
                        .HasAnnotation("RegularExpression", "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).*$");

                    b.Property<short>("Permissions")
                        .HasColumnType("smallint")
                        .HasColumnName("permissions");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)")
                        .HasColumnName("refreshtoken");

                    b.Property<DateTime>("TokenExpireDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("tokenexpiredate");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("KSozluk.Domain.Words", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("word");

                    b.HasKey("Id");

                    b.ToTable("words", (string)null);
                });

            modelBuilder.Entity("KSozluk.Domain.Descriptions", b =>
                {
                    b.HasOne("KSozluk.Domain.Words", "Word")
                        .WithMany("Descriptions")
                        .HasForeignKey("WordId");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("KSozluk.Domain.Words", b =>
                {
                    b.Navigation("Descriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
